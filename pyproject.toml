[tool.poetry]
name = "letovo-analytics"
version = "2022.3.18"
description = "Letovo Analytics bot helps letovians access s.letovo.ru resources via Telegram"
authors = ["arsikurin <arseny.kurin@gmail.com>"]

[tool.poetry.dependencies]
python = "3.10.5"
orjson = "^3.6.4"
fastapi = "^0.75.0"
firebase-admin = "^5.1.0"
colourlib = "^0.5.3"
PyYAML = "^6.0"
Jinja2 = "^3.0.2"
#aiofiles = "^0.8.0"
python-multipart = "^0.0.5"
uvloop = "^0.16.0"
aiorun = "^2021.10.1"
aiohttp = "^3.8.0"
uvicorn = { extras = ["standard"], version = "^0.17.0" }
pydantic = "^1.8.2"
#pandas = "^1.4.3"
#openpyxl = "^3.0.10"
#geopy = "^2.2.0"
#matplotlib = "^3.5.3"
#shapely = "^1.8.2"
#geopandas = "^0.11.1"
#plotly = "^5.10.0"
psycopg = { extras = ["c"], version = "^3.0.17" }
Pyrogram = "^2.0.43"
TgCrypto = "^1.2.3"
ics = "^0.7.2"

[tool.poetry.dev-dependencies]
pylint = "^2.11.1"
flake8 = "^4.0.1"
snakeviz = "^2.1.1"
tox = "^3.24.5"
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
#locust = "^2.5.0"
# Hypothesis
pytest-mock = "^3.6.1"
tox-gh-actions = "^2.9.1"
mypy = { git = "https://github.com/python/mypy.git", rev = "9b3147701f054bf8ef42bd96e33153b05976a5e1" }
types-PyYAML = "^6.0.4"
bandit = { extras = ["toml"], version = "^1.7.4" }

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=."
testpaths = [
    "./app/tests",
]


[tool.mypy]
mypy_path = "./"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = false
warn_unused_configs = true
no_implicit_reexport = false


[tool.bandit]
# $ bandit . -r -v -c "pyproject.toml"
#tests = ["B301"]
#skips = ["B101", "B601"]
exclude_dirs = ["./.tox", "./.git", "./.mypy_cache", "./.pytest_cache", "./.idea", "./.vscode", "./__pycache__", "./app/tests"]

[tool.bandit.any_other_function_with_shell_equals_true]
no_shell = [
    "os.execl",
    "os.execle",
    "os.execlp",
    "os.execlpe",
    "os.execv",
    "os.execve",
    "os.execvp",
    "os.execvpe",
    "os.spawnl",
    "os.spawnle",
    "os.spawnlp",
    "os.spawnlpe",
    "os.spawnv",
    "os.spawnve",
    "os.spawnvp",
    "os.spawnvpe",
    "os.startfile"
]
shell = [
    "os.system",
    "os.popen",
    "os.popen2",
    "os.popen3",
    "os.popen4",
    "popen2.popen2",
    "popen2.popen3",
    "popen2.popen4",
    "popen2.Popen3",
    "popen2.Popen4",
    "commands.getoutput",
    "commands.getstatusoutput"
]
subprocess = [
    "subprocess.Popen",
    "subprocess.call",
    "subprocess.check_call",
    "subprocess.check_output"
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
